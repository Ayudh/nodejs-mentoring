/**
 * NodeJS Mentoring Swagger
 * NodeJS Mentoring Program API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ghari81189@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define([
      'ApiClient',
      'model/City',
      'model/CityLocation',
      'model/Product',
      'model/User',
      'api/CityApi',
      'api/ProductApi',
      'api/UserApi'
    ], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(
      require('./ApiClient'),
      require('./model/City'),
      require('./model/CityLocation'),
      require('./model/Product'),
      require('./model/User'),
      require('./api/CityApi'),
      require('./api/ProductApi'),
      require('./api/UserApi')
    );
  }
})(function(
  ApiClient,
  City,
  CityLocation,
  Product,
  User,
  CityApi,
  ProductApi,
  UserApi
) {
  'use strict';

  /**
   * NodeJS_Mentoring_Program_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var NodeJsMentoringSwagger = require('index'); // See note below*.
   * var xxxSvc = new NodeJsMentoringSwagger.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new NodeJsMentoringSwagger.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new NodeJsMentoringSwagger.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new NodeJsMentoringSwagger.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The City model constructor.
     * @property {module:model/City}
     */
    City: City,
    /**
     * The CityLocation model constructor.
     * @property {module:model/CityLocation}
     */
    CityLocation: CityLocation,
    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product: Product,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The CityApi service constructor.
     * @property {module:api/CityApi}
     */
    CityApi: CityApi,
    /**
     * The ProductApi service constructor.
     * @property {module:api/ProductApi}
     */
    ProductApi: ProductApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi
  };

  return exports;
});
