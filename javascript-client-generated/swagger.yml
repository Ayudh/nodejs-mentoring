swagger: '2.0'
info:
  description: |
    NodeJS Mentoring Program API
  version: 1.0.0
  title: NodeJS Mentoring Swagger
  termsOfService: http://swagger.io/terms/
  contact:
    email: ghari81189@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
tags:
  - name: city
    description: To get cities
  - name: product
    description: Access to Product orders
  - name: user
    description: Operations about user
# schemes:
# - http
paths:
  /city:
    get:
      tags:
        - city
      summary: Get Cities
      operationId: getCity
      produces:
        - application/json
      responses:
        200:
          description: Valid
    post:
      tags:
        - city
      summary: Add a new city
      operationId: addCity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: City object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/City'
      responses:
        405:
          description: Invalid input
    put:
      tags:
        - city
      summary: Update an existing city
      operationId: updateCity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: City object
          required: true
          schema:
            $ref: '#/definitions/City'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Pet not found
        405:
          description: Validation exception
    delete:
      tags:
        - city
      summary: Delete specified city
      operationId: deleteCity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: City object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/City'
      responses:
        405:
          description: Invalid input
  /city/random:
    get:
      tags:
        - city
      summary: Get Random City
      operationId: getRandomCity
      produces:
        - application/json
      responses:
        200:
          description: Valid
  /product:
    get:
      tags:
        - product
      summary: Get Cities
      operationId: getProduct
      produces:
        - application/json
      responses:
        200:
          description: Valid
    post:
      tags:
        - product
      summary: Add a new city
      operationId: addProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: City object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        405:
          description: Invalid input
    put:
      tags:
        - product
      summary: Update an existing city
      operationId: updateProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: City object
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Pet not found
        405:
          description: Validation exception
    delete:
      tags:
        - product
      summary: Delete specified city
      operationId: deleteProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: City object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        405:
          description: Invalid input
  /user:
    get:
      tags:
        - user
      summary: Get Users
      operationId: getUsers
      produces:
        - application/json
      responses:
        200:
          description: Valid
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Product:
    type: object
    properties:
      name:
        type: string
      brand:
        type: string
      price:
        type: integer
        format: int32
      reviews:
        type: array
        items:
          type: string
    xml:
      name: Product
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  City:
    type: object
    required:
      - name
      - country
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: atp
      country:
        type: string
        example: hongkong
      location:
        type: object
        required:
          - lat
          - long
        properties:
          lat:
            type: integer
            example: 302.32
          long:
            type: integer
            example: 589.265
    xml:
      name: City
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /aaa879/NodeJS/1.0.0
schemes:
  - https
  - http
